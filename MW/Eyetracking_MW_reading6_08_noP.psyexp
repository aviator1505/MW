<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2022.2.4">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="{'participant': '', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="False" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="2022.2.4" valType="str" updates="None" name="Use version"/>
    <Param val="[2048, 1152]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="MW_reading2_07" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="Pupil Labs" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="C:\Users\BAR Lab\Documents\LF_AM_MindWandering_EyeTracking\MW_reading_6_08_no_practice copy\EyeData" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="Monitor" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
  </Settings>
  <Routines>
    <Routine name="Launch">
      <CodeComponent name="code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#import what we need to generate a random number&amp;#10;import random, xlrd&amp;#10;import time&amp;#10;&amp;#10;#Use the machine time as a seed to generate a random number from (allows for closer to &quot;truly random&quot; numbers)&amp;#10;random.seed(time.process_time())&amp;#10;#set variable myRand to a random number (either 1 or 2); myRandP (EITHER 3 OR 4)&amp;#10;rand = random.randint(1,2) #random number for choosing experimental condition order&amp;#10;randP = random.randint(3,4) #random number for choosing reading pages order&amp;#10;&amp;#10;#set new variable 'currCondition' depending on what random number we generated&amp;#10;if rand == 1:&amp;#10;    #50% chance of being in the PC condition&amp;#10;    currCondition = &quot;PC&quot;&amp;#10;elif rand == 2:&amp;#10;    #50% chance of being in the SC condition&amp;#10;    currCondition = &quot;SC&quot;&amp;#10; &amp;#10;#CREATE A VARIABLE CALLED currConditionP and set it depending on randP&amp;#10;if randP == 3:&amp;#10;    #50% chance of being Tropo pages&amp;#10;    currConditionP = &quot;Tropo&quot;&amp;#10;elif randP == 4:&amp;#10;    #50% chance of being Life pages&amp;#10;    currConditionP = &quot;Life&quot;&amp;#10;&amp;#10;#For testing purposes we can set our condition and pages here. &amp;#10;#Just comment out the two lines below to run the experiment randomly.&amp;#10;currCondition = &quot;SC&quot;&amp;#10;#currConditionP = &quot;Tropo&quot;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;import * as xlrd from 'xlrd';&amp;#10;import * as time from 'time';&amp;#10;var currCondition, currConditionP, rand, randP;&amp;#10;random.seed(time.clock());&amp;#10;rand = random.randint(1, 2);&amp;#10;randP = random.randint(3, 4);&amp;#10;if ((rand === 1)) {&amp;#10;    currCondition = &quot;PC&quot;;&amp;#10;} else {&amp;#10;    if ((rand === 2)) {&amp;#10;        currCondition = &quot;SC&quot;;&amp;#10;    }&amp;#10;}&amp;#10;if ((randP === 3)) {&amp;#10;    currConditionP = &quot;Tropo&quot;;&amp;#10;} else {&amp;#10;    if ((randP === 4)) {&amp;#10;        currConditionP = &quot;Life&quot;;&amp;#10;    }&amp;#10;}&amp;#10;currCondition = &quot;PC&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="AQ_10_Qs">
      <ImageComponent name="AQ_10">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$chAQ10" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="AQ_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.7)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="AQ_key_resp">
        <Param val="'1','2','3','4'," valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="AQ_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Demographics"/>
    <Routine name="PracticeTrials">
      <CodeComponent name="code_7">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="##ONE TIME INITIALIZATION START&amp;#10;#setting a bunch of defaults here (we will reset these in every practice or reading loop)&amp;#10;opacityImage1 = 0 #PC image opacity (by default our probe and intentionality images are hidden)&amp;#10;opacityImage2 = 0 #SC image opacity&amp;#10;time1=0 #variables for recording response time data&amp;#10;time2=0&amp;#10;resp1=0 #variables for recording key press data&amp;#10;resp2=0&amp;#10;printNow = 0 #used to trigger data writing to output file&amp;#10;keys = &quot;&quot; #stores keypress values &amp;#10;#these three variables are used to start our timers at the right spot and avoid some edge cases&amp;#10;firstLoop = True&amp;#10;firstRoutine = True&amp;#10;timerStarted = False &amp;#10;&amp;#10;&amp;#10;#start two clocks&amp;#10;mainTimer = core.Clock() # this one just runs for the whole PracticeTrial loop&amp;#10;probeTimer = core.Clock() # this one stops and restarts every time one of our probe/intentionality images pops up&amp;#10;&amp;#10;myCount = 1 #this counts up and tells which value from the probe list we should use&amp;#10;&amp;#10;# import some stuff just in case&amp;#10;import random, copy&amp;#10;from random import randint&amp;#10;from decimal import *&amp;#10;import csv&amp;#10;from numpy import *&amp;#10;from psychopy import core, event&amp;#10;event.getKeys() #clear the keyboard buffer just in case they recently pressed a relevant key&amp;#10;##ONE TIME INITIALIZATION END&amp;#10;&amp;#10;# here's a list of the time in seconds between probes. The probe clock starts ticking when the last seen probe goes away&amp;#10;# change this to adjust probes for PracticeTrials&amp;#10;probe = [0, 15, 15, 15]&amp;#10;# first item in probe, 0, never happens because myCount starts at 1. Ignore first element in the probe list." valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;import * as copy from 'copy';&amp;#10;import {randint} from 'random';&amp;#10;import {*} from 'decimal';&amp;#10;import * as csv from 'csv';&amp;#10;import {*} from 'numpy';&amp;#10;import {core} from 'psychopy';&amp;#10;var isPaused, mainTimer, myCount, opacityImage1, opacityImage2, opacityRestart, printNow, printX, probe, probeTimer, resp1, resp2, time1, time2, timeThru;&amp;#10;opacityImage1 = 0;&amp;#10;opacityImage2 = 0;&amp;#10;opacityRestart = 0;&amp;#10;isPaused = 0;&amp;#10;time1 = 0;&amp;#10;time2 = 0;&amp;#10;resp1 = 0;&amp;#10;resp2 = 0;&amp;#10;timeThru = 0;&amp;#10;printNow = 0;&amp;#10;printX = 0;&amp;#10;mainTimer = new core.Clock();&amp;#10;probeTimer = new core.Clock();&amp;#10;myCount = 1;&amp;#10;probe = [0, 8, 10, 15];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#if PracticeTrials just started then start our timers at 0. We never do this again after the first loop.&amp;#10;if firstRoutine:&amp;#10;    firstRoutine = False&amp;#10;    probeTimer.reset(0)&amp;#10;    mainTimer.reset(0)&amp;#10;    timerStarted = True" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys() #get latest key presses&amp;#10;&amp;#10;#timerStarted is used here to make sure that we don't end the routine before we get a chance to reset the timer at the start of PracticeTrials&amp;#10;if (mainTimer.getTime() &gt; 180) and timerStarted: &amp;#10;    continueRoutine = False #quit every routine once the main timer goes over 3 minutes&amp;#10;&amp;#10;if firstLoop: #check if it's the very first frame&amp;#10;    keys = []&amp;#10;    event.clearEvents() #ignore any keypresses that seem to have happened in or before the first frame of PracticeTrials&amp;#10;&amp;#10;#this is the self-caught condition        &amp;#10;if currCondition=='SC':&amp;#10;    &amp;#10;    if PracticeTrails_key_resp.keys == 'space': #check if the user presses the space key&amp;#10;        continueRoutine = False #go to the next page for reading&amp;#10;    &amp;#10;    if '1' in keys: #Check if the user presses the '1' key to report MW&amp;#10;        opacityImage2 = 1 #show the intentionality image&amp;#10;        TimeAbs = mainTimer.getTime() #get the time that the key was pressed&amp;#10;        TimeSinceLast = probeTimer.getTime() #get the time since the last probe popped up&amp;#10;        keys = []&amp;#10;        event.clearEvents() #clear the keys to wait for the next input&amp;#10;&amp;#10;    if (opacityImage2 == 1) and ('u' in keys or 'i' in keys): #while we show the intentionality image, wait to see if the 'u' or 'i' key is pressed&amp;#10;        opacityImage2 = 0 #hide the intentionality image&amp;#10;        time2 = mainTimer.getTime() - TimeAbs #store the time it took the user to respond with the 'u' or 'i' key&amp;#10;        resp2 = keys[0] #store the name of the key that was pressed&amp;#10;        keys = []&amp;#10;        event.clearEvents()&amp;#10;        printNow = 1 #start printing our data&amp;#10;&amp;#10;    if printNow == 1: #time to write out data to our data file&amp;#10;        thisExp.addData('probe_appeared', TimeAbs) #log the time that the SC probe appeared (user pressed '1' key)&amp;#10;        thisExp.addData('time_since_last_probe', TimeSinceLast) #log time since last probe. Should be time since start of experiment if this is the first probe&amp;#10;        thisExp.addData('response_delay', time2) #log delay from probe appearing to response key being pressed&amp;#10;        thisExp.addData('probe_key_response', resp2) #log the key response to the probe&amp;#10;        thisExp.addData('condition', currCondition) #save the current condition&amp;#10;        thisExp.nextEntry() #if we do not move to the next line in the data file, then any other probes that occur before the end of this routine will overwrite our previous probe data&amp;#10;        probeTimer.reset(0) #reset the probe timer until the next time they self-report&amp;#10;        time1=0 #reset our time and response variables&amp;#10;        time2=0&amp;#10;        resp1=0&amp;#10;        resp2=0&amp;#10;        printNow = 0&amp;#10;&amp;#10;#this is the probe-caught condition&amp;#10;if currCondition=='PC':&amp;#10;    &amp;#10;    if PracticeTrails_key_resp.keys == 'space': #check if the user presses the space key&amp;#10;        continueRoutine = False #go to the next page for reading&amp;#10;    &amp;#10;    #we need to check that opacityImage1 is not 1 here. Otherwise this if statement is true every frame until we get a response, which ruins our data.&amp;#10;    if opacityImage1 != 1 and (len(probe) &gt; myCount) and probeTimer.getTime() &gt;= probe[myCount]: # if the right amt of time has passed, display probe&amp;#10;        opacityImage1=1 #show probe image&amp;#10;        TimeAbs = mainTimer.getTime() #get the time the probe appeared&amp;#10;        TimeSinceLast = probeTimer.getTime() #get the time since the last probe went away&amp;#10;        &amp;#10;    if opacityImage1 == 1 and ('0' in keys or 'i' in keys or 'u' in keys): #Wait for the user's response once the probe image is showing&amp;#10;        opacityImage1 = 0 #hide the probe image&amp;#10;        time1 = mainTimer.getTime() - TimeAbs #get the response time since the probe image appeared&amp;#10;        resp1 = keys[0] #store the key that was pressed&amp;#10;        keys = []&amp;#10;        event.clearEvents()&amp;#10;        printNow = 1 #start the conditional for writing out data to the data file&amp;#10;&amp;#10;    if printNow == 1:&amp;#10;        printNow = 0 #stop printing after we do it once&amp;#10;        thisExp.addData('probe_appeared', TimeAbs) #log the time that the PC probe appeared&amp;#10;        thisExp.addData('time_since_last_probe', TimeSinceLast) #log time since last probe. Should be time since start of experiment if this is the first probe&amp;#10;        thisExp.addData('response_delay', time1) #log delay from probe appearing to response key being pressed&amp;#10;        thisExp.addData('probe_key_response', resp1) #log the key response to the probe&amp;#10;        thisExp.addData('condition', currCondition) #save the current condition&amp;#10;        thisExp.nextEntry() #if we do not move to the next line in the data file, then any other probes that occur before the end of this routine will overwrite our previous probe data&amp;#10;        probeTimer.reset(0)&amp;#10;        time1=0 #reset our time and response variables&amp;#10;        time2=0&amp;#10;        resp1=0&amp;#10;        resp2=0&amp;#10;        myCount = myCount + 1&amp;#10;        &amp;#10;firstLoop = False #end of the first frame loop so this is no longer true" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((currCondition === &quot;SC&quot;)) {&amp;#10;    if ((keypress.keys === &quot;right&quot;)) {&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;    if (((keypress.keys === &quot;z&quot;) &amp;&amp; (timeThru === 0))) {&amp;#10;        opacityImage2 = 1;&amp;#10;        TimeAbs = mainTimer.getTime();&amp;#10;        TimeSinceLast = probeTimer.getTime();&amp;#10;        timeThru = 1;&amp;#10;        psychoJS.eventManager.clearEvents();&amp;#10;    }&amp;#10;    if (((opacityImage2 === 1) &amp;&amp; ((keypress.keys === &quot;2&quot;) || (keypress.keys === &quot;3&quot;)))) {&amp;#10;        opacityImage2 = 0;&amp;#10;        time2 = (mainTimer.getTime() - TimeAbs);&amp;#10;        resp2 = keypress.keys;&amp;#10;        psychoJS.eventManager.clearEvents();&amp;#10;        printNow = 1;&amp;#10;        opacityRestart = 1;&amp;#10;    }&amp;#10;    if ((printNow === 1)) {&amp;#10;        probeTimer.reset(0);&amp;#10;        time1 = 0;&amp;#10;        time2 = 0;&amp;#10;        resp1 = 0;&amp;#10;        resp2 = 0;&amp;#10;        printNow = 0;&amp;#10;    }&amp;#10;    if (((opacityRestart === 1) &amp;&amp; (probeTimer.getTime() &gt;= 1))) {&amp;#10;        opacityRestart = 0;&amp;#10;        timeThru = 0;&amp;#10;    }&amp;#10;}&amp;#10;if ((currCondition === &quot;PC&quot;)) {&amp;#10;    if ((keypress.keys === &quot;right&quot;)) {&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;    if (((probeTimer.getTime() &gt;= probe[myCount]) &amp;&amp; (timeThru === 0))) {&amp;#10;        opacityImage1 = 1;&amp;#10;        TimeAbs = mainTimer.getTime();&amp;#10;        timeThru = 1;&amp;#10;        isPaused = 1;&amp;#10;    }&amp;#10;    if (((opacityImage1 === 1) &amp;&amp; (keypress.keys === &quot;1&quot;))) {&amp;#10;        opacityImage1 = 0;&amp;#10;        opacityImage2 = 1;&amp;#10;        time1 = (mainTimer.getTime() - TimeAbs);&amp;#10;        resp1 = keypress.keys;&amp;#10;        psychoJS.eventManager.clearEvents();&amp;#10;    }&amp;#10;    if (((opacityImage1 === 1) &amp;&amp; (keypress.keys === &quot;0&quot;))) {&amp;#10;        opacityImage1 = 0;&amp;#10;        time1 = (mainTimer.getTime() - TimeAbs);&amp;#10;        resp1 = keypress.keys;&amp;#10;        psychoJS.eventManager.clearEvents();&amp;#10;        printX = 1;&amp;#10;        printNow = 1;&amp;#10;        opacityRestart = 1;&amp;#10;    }&amp;#10;    if (((opacityImage2 === 1) &amp;&amp; ((keypress.keys === &quot;3&quot;) || (keypress.keys === &quot;2&quot;)))) {&amp;#10;        opacityImage2 = 0;&amp;#10;        time2 = ((mainTimer.getTime() - time1) - TimeAbs);&amp;#10;        resp2 = keypress.keys;&amp;#10;        psychoJS.eventManager.clearEvents();&amp;#10;        printX = 1;&amp;#10;        printNow = 1;&amp;#10;        opacityRestart = 1;&amp;#10;    }&amp;#10;    if (((printNow === 1) &amp;&amp; (printX === 1))) {&amp;#10;        printNow = 0;&amp;#10;        printX = 0;&amp;#10;        probeTimer.reset(0);&amp;#10;        time1 = 0;&amp;#10;        time2 = 0;&amp;#10;        resp1 = 0;&amp;#10;        resp2 = 0;&amp;#10;        myCount = (myCount + 1);&amp;#10;    }&amp;#10;    if (((opacityRestart === 1) &amp;&amp; (probeTimer.getTime() &gt;= 1))) {&amp;#10;        printNow = 0;&amp;#10;        opacityRestart = 0;&amp;#10;        isPaused = 0;&amp;#10;        timeThru = 0;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="EinsteinIm">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$chEin" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="EinsteinIm" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.85, 0.85)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="PCImage">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images\PC_v2.png" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="PCImage" valType="code" updates="None" name="name"/>
        <Param val="$opacityImage1" valType="code" updates="set every frame" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.85)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="SCImage">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images\SC_v2.png" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="SCImage" valType="code" updates="None" name="name"/>
        <Param val="$opacityImage2" valType="code" updates="set every frame" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.85)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="PracticeTrails_key_resp">
        <Param val="'space'," valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="PracticeTrails_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="MW_def">
      <ImageComponent name="MWdefInstr">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$chInstrSlide" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="MWdefInstr" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.8)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="MWdefInstr_key_resp">
        <Param val="'space'," valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="MWdefInstr_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Debrief"/>
    <Routine name="LaunchPages">
      <CodeComponent name="code_6">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#create a variable called probeMessage. We will use this variable to tell psychopy what text to display&amp;#10;if currCondition == &quot;PC&quot;:&amp;#10;    #if we're in the PC condition then show the PC instructions&amp;#10;    probeMessage = &quot;Remember, when the probe appears on screen: \n Press '1' if you were mind wandering (MW) immediately before the probe appeared, or '0' if you were not MW. \n When prompted, press 'i' if your MW was intentional (on purpose), or 'u' if it was unintentional (just happened on its own). \n When prompted again, press 'y' for yes, your MW was task-related, or 'n' for no, it was not task-related.&quot;&amp;#10;    stimFile = &quot;lifePages_PC.csv&quot;&amp;#10;elif currCondition == &quot;SC&quot;:&amp;#10;    #if we're in the SC condition then show the SC instructions&amp;#10;    probeMessage = &quot;Remember: Press '1' any time you catch yourself mind wandering (MW). \n When prompted, press 'i' if your MW was intentional (on purpose), or 'u' if it was unintentional (just happened on its own). \n When prompted again, press 'y' for yes, your MW was task-related, or 'n' for no, it was not task-related&quot;&amp;#10;    stimFile = &quot;lifePages_SC.csv&quot;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="if ((currCondition === &quot;PC&quot;)) {&amp;#10;    probeMessage = &quot;Remember, when the probe appears on screen: \n Press '1' if you were mind wandering (MW) immediately before the probe appeared, or '0' if you were not MW. \n When prompted, press 'i' if your MW was intentional (on purpose), or 'u' if it was unintentional (just happened on its own). \n When prompted again, press 'y' for yes, your MW was task-related, or 'n' for no, it was not task-related.&quot;;&amp;#10;    stimFile = &quot;lifePages_PC.csv&quot;;&amp;#10;} else {&amp;#10;    if ((currCondition === &quot;SC&quot;)) {&amp;#10;        probeMessage = &quot;Remember: Press '1' any time you catch yourself mind wandering (MW). \n When prompted, press 'i' if your MW was intentional (on purpose), or 'u' if it was unintentional (just happened on its own). \n When prompted again, press 'y' for yes, your MW was task-related, or 'n' for no, it was not task-related&quot;;&amp;#10;        stimFile = &quot;lifePages_SC.csv&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="DemographicQs">
      <ImageComponent name="DemoQs">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$chDemoQs" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="DemoQs" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.7)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="DemographicQs_resp">
        <Param val="'1','2','3','4','5','6','7'," valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="DemographicQs_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Welcome">
      <TextComponent name="Welcome_text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Welcome_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Welcome to the experiment!&amp;#10;&amp;#10;Before we begin, please complete the following multiple choice questions by using the number keys to enter your answers.&amp;#10;&amp;#10;&amp;#10;(Press the spacebar to continue)" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="Welcome_text_resp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Welcome_text_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="IntroPractice">
      <CodeComponent name="code_4">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="if ((currCondition === &quot;PC&quot;)) {&amp;#10;    probeMessage = &quot;Remember, when the probe appears on screen: \n Press '1' if you were mind wandering (MW) immediately before the probe appeared, or '0' if you were not MW. \n When prompted, press 'i' if your MW was intentional (on purpose), or 'u' if it was unintentional (just happened on its own). \n When prompted again, press 'y' for yes, your MW was task-related, or 'n' for no, it was not task-related.&quot;;&amp;#10;} else {&amp;#10;    if ((currCondition === &quot;SC&quot;)) {&amp;#10;        probeMessage = &quot;Remember: Press '1' any time you catch yourself mind wandering (MW). \n When prompted, press 'i' if your MW was intentional (on purpose), or 'u' if it was unintentional (just happened on its own). \n When prompted again, press 'y' for yes, your MW was task-related, or 'n' for no, it was not task-related&quot;;&amp;#10;    }&amp;#10;}&amp;#10;if ((currConditionP === &quot;Life&quot;)) {&amp;#10;    stimFile = &quot;LifePages.csv&quot;;&amp;#10;} else {&amp;#10;    if ((currConditionP === &quot;Tropo&quot;)) {&amp;#10;        stimFile = &quot;TropoPages.csv&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="IntroExp">
      <TextComponent name="text">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$probeMessage" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="IntroExp_key_resp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="IntroExp_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="AQintro">
      <TextComponent name="text_3">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Please answer the following questions.&amp;#10;&amp;#10;&amp;#10;&amp;#10;(Press the spacebar to continue.)" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="AQintro_key_resp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="AQintro_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Reading">
      <CodeComponent name="code_3">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="##ONE TIME INITIALIZATION START&amp;#10;#setting a bunch of defaults here (we will reset these in every practice or reading loop)&amp;#10;opacityImage1 = 0 #PC image opacity (by default our probe and intentionality images are hidden)&amp;#10;opacityImage2 = 0 #SC image opacity&amp;#10;time1=0 #variables for recording response time data&amp;#10;time2=0&amp;#10;resp1=0 #variables for recording key press data&amp;#10;resp2=0&amp;#10;printNow = 0 #used to trigger data writing to output file&amp;#10;keys = &quot;&quot; #stores keypress values &amp;#10;#these three variables are used to start our timers at the right spot and avoid some edge cases&amp;#10;firstLoop2 = True&amp;#10;firstRoutine2 = True&amp;#10;timerStarted2 = False&amp;#10;&amp;#10;&amp;#10;#start two clocks&amp;#10;mainTimer2 = core.Clock() # this one just runs for the whole PracticeTrial loop&amp;#10;probeTimer2 = core.Clock() # this one stops and restarts every time one of our probe/intentionality images pops up&amp;#10;&amp;#10;myCount = 1 #this counts up and tells which value from the probe list we should use&amp;#10;&amp;#10;# import some stuff just in case&amp;#10;import random, copy&amp;#10;from random import randint&amp;#10;from decimal import *&amp;#10;import csv&amp;#10;from numpy import *&amp;#10;from psychopy import core, event&amp;#10;event.getKeys() #clear the keyboard buffer just in case they recently pressed a relevant key&amp;#10;##ONE TIME INITIALIZATION END&amp;#10;&amp;#10;#Counter for iterating through our probe2 list&amp;#10;myCount2 = 1&amp;#10;&amp;#10;event.clearEvents() #clear events just in case they recently pressed a relevant key&amp;#10;&amp;#10;# here's a list of the time in seconds between probes&amp;#10;# change this to adjust the probes for the Reading loop&amp;#10;probe2 = [0,91,112,74,98,113,62,92,79,76,62]&amp;#10;# first item in probe, 0, never happens because myCount starts at 1" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;import * as copy from 'copy';&amp;#10;import {randint} from 'random';&amp;#10;import {*} from 'decimal';&amp;#10;import * as csv from 'csv';&amp;#10;import {*} from 'numpy';&amp;#10;import {core} from 'psychopy';&amp;#10;var isPaused, mainTimer, myCount, opacityImage1, opacityImage2, opacityRestart, printNow, printX, probe, probeTimer, resp1, resp2, time1, time2, timeThru;&amp;#10;opacityImage1 = 0;&amp;#10;opacityImage2 = 0;&amp;#10;opacityRestart = 0;&amp;#10;isPaused = 0;&amp;#10;time1 = 0;&amp;#10;time2 = 0;&amp;#10;resp1 = 0;&amp;#10;resp2 = 0;&amp;#10;timeThru = 0;&amp;#10;printNow = 0;&amp;#10;printX = 0;&amp;#10;mainTimer = new core.Clock();&amp;#10;probeTimer = new core.Clock();&amp;#10;myCount = 1;&amp;#10;probe = [0, 8, 10, 15];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#Reset a bunch of our defaults at the start of this loop. We only do this once.&amp;#10;#This stops the values from our previous practice loop from affecting this reading loop.&amp;#10;if firstRoutine2:&amp;#10;    firstRoutine2 = False&amp;#10;    mainTimer2.reset(0)&amp;#10;    probeTimer2.reset(0)&amp;#10;    timerStarted2 = True" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if (mainTimer2.getTime() &gt; 1080) and timerStarted2:&amp;#10;    continueRoutine = False #quit every routine once the main timer goes over 18 minutes&amp;#10;    &amp;#10;if firstLoop2:&amp;#10;    keys = []&amp;#10;    event.clearEvents()&amp;#10;&amp;#10;if currCondition=='SC':&amp;#10;    if Reading_key_resp.keys == 'space':&amp;#10;        continueRoutine = False&amp;#10;    &amp;#10;    if '1' in keys:&amp;#10;        opacityImage2 = 1&amp;#10;        TimeAbs = mainTimer2.getTime()&amp;#10;        TimeSinceLast = probeTimer2.getTime()&amp;#10;        keys = []&amp;#10;        event.clearEvents()&amp;#10;&amp;#10;    if (opacityImage2 == 1) and ('u' in keys or 'i' in keys):&amp;#10;        opacityImage2 = 0&amp;#10;        time2 = mainTimer2.getTime() - TimeAbs&amp;#10;        resp2 = keys[0]&amp;#10;        keys = []&amp;#10;        event.clearEvents()&amp;#10;        printNow = 1&amp;#10;&amp;#10;    if printNow == 1:&amp;#10;        thisExp.addData('probe_appeared', TimeAbs) #log the time that the SC probe appeared (user pressed '1' key)&amp;#10;        thisExp.addData('time_since_last_probe', TimeSinceLast) #log time since last probe. Should be time since start of experiment if this is the first probe&amp;#10;        thisExp.addData('response_delay', time2) #log delay from probe appearing to response key being pressed&amp;#10;        thisExp.addData('probe_key_response', resp2) #log the key response to the probe&amp;#10;        thisExp.addData('condition', currCondition) #save the current condition&amp;#10;        thisExp.nextEntry() #if we do not move to the next line in the data file, then any other probes that occur before the end of this routine will overwrite our previous probe data&amp;#10;        probeTimer2.reset(0) &amp;#10;        time1=0 &amp;#10;        time2=0&amp;#10;        resp1=0&amp;#10;        resp2=0&amp;#10;        printNow = 0&amp;#10;&amp;#10;&amp;#10;if currCondition=='PC':&amp;#10;    if Reading_key_resp.keys == 'space':&amp;#10;        continueRoutine = False&amp;#10;    &amp;#10;    if opacityImage1 != 1 and (len(probe2) &gt; myCount2) and probeTimer2.getTime() &gt;= probe2[myCount2]:&amp;#10;        opacityImage1=1&amp;#10;        TimeAbs = mainTimer2.getTime()&amp;#10;        TimeSinceLast = probeTimer2.getTime() #get the time since the last probe popped up&amp;#10;        &amp;#10;    if opacityImage1 == 1 and ('0' in keys or 'i' in keys or 'u' in keys):&amp;#10;        opacityImage1 = 0&amp;#10;        time1 = mainTimer2.getTime() - TimeAbs&amp;#10;        resp1 = keys[0]&amp;#10;        keys = []&amp;#10;        event.clearEvents()&amp;#10;        printNow = 1&amp;#10;&amp;#10;    if printNow == 1:&amp;#10;        printNow = 0&amp;#10;        thisExp.addData('probe_appeared', TimeAbs) #log the time that the PC probe appeared&amp;#10;        thisExp.addData('time_since_last_probe', TimeSinceLast) #log time since last probe. Should be time since start of experiment if this is the first probe&amp;#10;        thisExp.addData('response_delay', time1) #log delay from probe appearing to response key being pressed&amp;#10;        thisExp.addData('probe_key_response', resp1) #log the key response to the probe&amp;#10;        thisExp.addData('condition', currCondition) #save the current condition&amp;#10;        thisExp.nextEntry() #if we do not move to the next line in the data file, then any other probes that occur before the end of this routine will overwrite our previous probe data&amp;#10;        probeTimer2.reset(0)&amp;#10;        time1=0&amp;#10;        time2=0&amp;#10;        resp1=0&amp;#10;        resp2=0&amp;#10;        myCount2 = myCount2 + 1&amp;#10;        &amp;#10;firstLoop2 = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="Reading_key_resp">
        <Param val="'space'," valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Reading_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="imagePages">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$ChPage" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="imagePages" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.85, 0.85)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="PCProbe">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/PC_v2.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="PCProbe" valType="code" updates="None" name="name"/>
        <Param val="opacityImage1" valType="num" updates="set every frame" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.85)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="SCProbe">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/SC_v2.png" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="SCProbe" valType="code" updates="None" name="name"/>
        <Param val="opacityImage2" valType="code" updates="set every frame" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.85)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
    <Routine name="Quiz">
      <ImageComponent name="QuizQuestion">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$chQs" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="QuizQuestion" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.8, 0.8)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="Quiz_key_resp">
        <Param val="'a','b','c','d'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Quiz_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="AgeQuestion">
      <TextboxComponent name="AgeQuestion_textbox">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="AgeQuestion_textbox" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="(0, -0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(None, None)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </TextboxComponent>
      <TextComponent name="text_4">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Using the number keys please enter your age. Then press 'space' to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="Age_resp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Age_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="blank">
      <TextComponent name="textInterval">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="textInterval" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="setInstrFile2">
      <CodeComponent name="code_5">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((currCondition === &quot;PC&quot;)) {&amp;#10;    MyInstrFile = &quot;InstrFile/Instr_PC.csv&quot;;&amp;#10;} else {&amp;#10;    if ((currCondition === &quot;SC&quot;)) {&amp;#10;        MyInstrFile = &quot;InstrFile/Instr_SC.csv&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#TELLING PSYCHOPY WHICH INSTRUCTION SLIDES TO DISPLAY:&amp;#10;#We've done the first runthrough so now we're switching conditions&amp;#10;if currCondition == &quot;PC&quot;:&amp;#10;    currCondition = &quot;SC&quot;&amp;#10;elif currCondition == &quot;SC&quot;:&amp;#10;    currCondition = &quot;PC&quot;&amp;#10;&amp;#10;if currCondition == &quot;PC&quot;:&amp;#10;    #if we're in the PC condition then show the PC instructions&amp;#10;    InstrFile = &quot;InstrFile/Instr_PC.csv&quot;&amp;#10;elif currCondition == &quot;SC&quot;:&amp;#10;    #if we're in the SC condition then show the SC instructions&amp;#10;    InstrFile = &quot;InstrFile/Instr_SC.csv&quot;&amp;#10;    &amp;#10;#CONFIRM INSTRUCTION SLIDES WILL BE SHOWN IN ORDER ON CSV FILE" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="MW_def2">
      <ImageComponent name="MWdef_image">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$chInstrSlide" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="MWdef_image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.8)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="MW_def2_key_resp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="MW_def2_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="MWdefinitions2"/>
    <Routine name="IntroPractice2">
      <CodeComponent name="code_9">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#create a variable called probeMessage. We will use this variable to tell psychopy what text to display&amp;#10;if currCondition == &quot;PC&quot;:&amp;#10;    #if we're in the PC condition then show the PC instructions&amp;#10;    probeMessage = &quot;Remember, when the probe appears on screen: \n Press '1' if you were mind wandering (MW) immediately before the probe appeared, or '0' if you were not MW. \n When prompted, press 'i' if your MW was intentional (on purpose), or 'u' if it was unintentional (just happened on its own). \n When prompted again, press 'y' for yes, your MW was task-related, or 'n' for no, it was not task-related.&quot; &amp;#10;elif currCondition == &quot;SC&quot;:&amp;#10;    #if we're in the SC condition then show the SC instructions&amp;#10;    probeMessage = &quot;Remember: Press '1' any time you catch yourself mind wandering (MW). \n When prompted, press 'i' if your MW was intentional (on purpose), or 'u' if it was unintentional (just happened on its own). \n When prompted again, press 'y' for yes, your MW was task-related, or 'n' for no, it was not task-related&quot;&amp;#10;&amp;#10;#SWITCH CONDITION PAGES BECAUSE WE'RE ON TO THE SECOND SET OF TRIALS&amp;#10;if currConditionP == &quot;Life&quot;:&amp;#10;    currConditionP = &quot;Tropo&quot;&amp;#10;elif currConditionP == &quot;Tropo&quot;:&amp;#10;    currConditionP = &quot;Life&quot;&amp;#10;&amp;#10;if currConditionP == &quot;Life&quot;:&amp;#10;    #if we're in the Life condition then show LifePages&amp;#10;    stimFile = &quot;LifePages.csv&quot;&amp;#10;    quizFile = &quot;lifeQs.csv&quot;&amp;#10;elif currConditionP == &quot;Tropo&quot;:&amp;#10;    #if we're in the Tropo condition then show TropoPages&amp;#10;    stimFile = &quot;TropoPages.csv&quot;&amp;#10;    quizFile = &quot;tropoQs.csv&quot;&amp;#10;&amp;#10;#remember, once we've set the probeMessage variable we need to tell psychopy to show it as text&amp;#10;#double click on the 'text' object and set the 'text' field to '$probeMessage'&amp;#10;#this tells psychopy to display whatever the value of the probeMessage variable is" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_9" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="PracticeTrials2">
      <CodeComponent name="code_10">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="firstLoop3 = True&amp;#10;firstRoutine3 = True&amp;#10;timerStarted3 = False&amp;#10;&amp;#10;mainTimer3 = core.Clock() &amp;#10;probeTimer3 = core.Clock()&amp;#10;&amp;#10;myCount3 = 1&amp;#10;&amp;#10;event.getKeys()&amp;#10;probe3 = [0, 15, 15, 15]&amp;#10;# first item in probe, 0, never happens because myCount starts at 1" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if firstRoutine3:&amp;#10;    opacityImage1 = 0&amp;#10;    opacityImage2 = 0&amp;#10;    time1=0&amp;#10;    time2=0&amp;#10;    resp1=0&amp;#10;    resp2=0&amp;#10;    printNow = 0&amp;#10;    keys = &quot;&quot;&amp;#10;    firstRoutine3 = False&amp;#10;    mainTimer3.reset(0)&amp;#10;    probeTimer3.reset(0)&amp;#10;    timerStarted3 = True" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if (mainTimer3.getTime() &gt; 180) and timerStarted3:&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;if firstLoop3:&amp;#10;    keys = []&amp;#10;    event.clearEvents()&amp;#10;    &amp;#10;#this is the self-caught condition, but because this is the second run we enter it when condition is set to 'PC'&amp;#10;if currCondition=='SC':&amp;#10;    &amp;#10;    if PracticeTrials2_key_resp.keys == 'space':&amp;#10;        continueRoutine = False&amp;#10;        &amp;#10;    if '1' in keys: &amp;#10;        opacityImage2 = 1 &amp;#10;        TimeAbs = mainTimer3.getTime() &amp;#10;        TimeSinceLast = probeTimer3.getTime()&amp;#10;        keys = []&amp;#10;        event.clearEvents()&amp;#10;&amp;#10;    if (opacityImage2 == 1) and ('u' in keys or 'i' in keys):&amp;#10;        opacityImage2 = 0&amp;#10;        time2 = mainTimer3.getTime() - TimeAbs&amp;#10;        resp2 = keys[0]&amp;#10;        keys = []&amp;#10;        event.clearEvents()&amp;#10;        printNow = 1&amp;#10;&amp;#10;    if printNow == 1:&amp;#10;        thisExp.addData('probe_appeared', TimeAbs) #log the time that the SC probe appeared (user pressed '1' key)&amp;#10;        thisExp.addData('time_since_last_probe', TimeSinceLast) #log time since last probe. Should be time since start of experiment if this is the first probe&amp;#10;        thisExp.addData('response_delay', time2) #log delay from probe appearing to response key being pressed&amp;#10;        thisExp.addData('probe_key_response', resp2) #log the key response to the probe&amp;#10;        thisExp.addData('condition', currCondition) #save the current condition&amp;#10;        thisExp.nextEntry() #if we do not move to the next line in the data file, then any other probes that occur before the end of this routine will overwrite our previous probe data&amp;#10;        probeTimer3.reset(0) #reset the probe timer until the next time they self-report&amp;#10;        time1=0 #reset our time and response variables&amp;#10;        time2=0&amp;#10;        resp1=0&amp;#10;        resp2=0&amp;#10;        printNow = 0&amp;#10;&amp;#10;#this is the probe-caught condition but because this is the second run we enter here when condition is set to SC&amp;#10;if currCondition=='PC':&amp;#10;        &amp;#10;    if PracticeTrials2_key_resp.keys == 'space':&amp;#10;        continueRoutine = False&amp;#10;    &amp;#10;    if opacityImage1 != 1 and (len(probe3) &gt; myCount3) and probeTimer3.getTime() &gt;= probe[myCount3]:&amp;#10;        opacityImage1=1&amp;#10;        TimeAbs = mainTimer3.getTime()&amp;#10;        TimeSinceLast = probeTimer3.getTime() #get the time since the last probe went away&amp;#10;        &amp;#10;    if opacityImage1 == 1 and ('0' in keys or 'i' in keys or 'u' in keys):&amp;#10;        opacityImage1 = 0&amp;#10;        time1 = mainTimer3.getTime() - TimeAbs&amp;#10;        resp1 = keys[0]&amp;#10;        keys = []&amp;#10;        event.clearEvents()&amp;#10;        printNow = 1&amp;#10;&amp;#10;    if printNow == 1:&amp;#10;        printNow = 0&amp;#10;        thisExp.addData('probe_appeared', TimeAbs) #log the time that the PC probe appeared&amp;#10;        thisExp.addData('time_since_last_probe', TimeSinceLast) #log time since last probe. Should be time since start of experiment if this is the first probe&amp;#10;        thisExp.addData('response_delay', time1) #log delay from probe appearing to response key being pressed&amp;#10;        thisExp.addData('probe_key_response', resp1) #log the key response to the probe&amp;#10;        thisExp.addData('condition', currCondition) #save the current condition&amp;#10;        thisExp.nextEntry() #if we do not move to the next line in the data file, then any other probes that occur before the end of this routine will overwrite our previous probe data&amp;#10;        probeTimer3.reset(0)&amp;#10;        time1=0&amp;#10;        time2=0&amp;#10;        resp1=0&amp;#10;        resp2=0&amp;#10;        myCount3 = myCount3 + 1&amp;#10;        &amp;#10;firstLoop3 = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_10" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="EinsteinImage">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$chEin" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="EinsteinImage" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.85, 0.85)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="PCImage2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images\PC_v2.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="PCImage2" valType="code" updates="None" name="name"/>
        <Param val="opacityImage1" valType="num" updates="set every frame" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.85)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="SCImage2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images\SC_v2.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="SCImage2" valType="code" updates="None" name="name"/>
        <Param val="opacityImage2" valType="num" updates="set every frame" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.85)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="PracticeTrials2_key_resp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="PracticeTrials2_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="IntroExp2">
      <TextComponent name="probe_message">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="probe_message" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$probeMessage2" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="IntroExp2_key_resp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="IntroExp2_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Reading2">
      <KeyboardComponent name="Reading2_key_resp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Reading2_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="imagePages2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$ChPage" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="imagePages2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.85, 0.85)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="PCProbe2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/PC_v2.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="PCProbe2" valType="code" updates="None" name="name"/>
        <Param val="opacityImage1" valType="num" updates="set every frame" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.85)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="SCProbe2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/SC_v2.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="SCProbe2" valType="code" updates="None" name="name"/>
        <Param val="opacityImage2" valType="num" updates="set every frame" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.85)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <CodeComponent name="code_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#use new true/false variables so that the values from our Practice loop don't affect the functionality of the Reading loop&amp;#10;firstLoop4 = True&amp;#10;firstRoutine4 = True&amp;#10;timerStarted4 = False&amp;#10;&amp;#10;#start two new clocks so the values of the previous clocks don't affect this loop&amp;#10;mainTimer4 = core.Clock()&amp;#10;probeTimer4 = core.Clock()&amp;#10;&amp;#10;#create a new counter so the value of our old counter doesn't carry over to this loop&amp;#10;myCount4 = 1&amp;#10;&amp;#10;event.clearEvents()&amp;#10;&amp;#10;# here's a list of the time in seconds between probes&amp;#10;# change this to adjust the probes for the Quiz2 loop&amp;#10;probe4 = [0,91,112,74,98,113,62,92,79,76,62]&amp;#10;# first item in probe, 0, never happens because myCount starts at 1" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if firstRoutine4:&amp;#10;    opacityImage1 = 0&amp;#10;    opacityImage2 = 0&amp;#10;    time1=0&amp;#10;    time2=0&amp;#10;    resp1=0&amp;#10;    resp2=0&amp;#10;    printNow = 0&amp;#10;    keys = &quot;&quot;&amp;#10;    firstRoutine4 = False&amp;#10;    mainTimer4.reset(0)&amp;#10;    probeTimer4.reset(0)&amp;#10;    timerStarted4 = True" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if (mainTimer4.getTime() &gt; 1080) and timerStarted4:&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;if firstLoop4:&amp;#10;    keys = []&amp;#10;    event.clearEvents()&amp;#10;&amp;#10;#this is the self-caught condition but we check if we're in PC because this is run 2&amp;#10;if currCondition=='SC':&amp;#10;    &amp;#10;    if Reading2_key_resp.keys == 'space':&amp;#10;        continueRoutine = False&amp;#10;    &amp;#10;    if '1' in keys:&amp;#10;        opacityImage2 = 1&amp;#10;        TimeAbs = mainTimer4.getTime()&amp;#10;        TimeSinceLast = probeTimer4.getTime()&amp;#10;        keys = []&amp;#10;        event.clearEvents()&amp;#10;&amp;#10;    if (opacityImage2 == 1) and ('u' in keys or 'i' in keys):&amp;#10;        opacityImage2 = 0&amp;#10;        time2 = mainTimer4.getTime() - TimeAbs&amp;#10;        resp2 = keys[0]&amp;#10;        keys = []&amp;#10;        event.clearEvents()&amp;#10;        printNow = 1&amp;#10;&amp;#10;    if printNow == 1:&amp;#10;        thisExp.addData('probe_appeared', TimeAbs) #log the time that the SC probe appeared (user pressed '1' key)&amp;#10;        thisExp.addData('time_since_last_probe', TimeSinceLast) #log time since last probe. Should be time since start of experiment if this is the first probe&amp;#10;        thisExp.addData('response_delay', time2) #log delay from probe appearing to response key being pressed&amp;#10;        thisExp.addData('probe_key_response', resp2) #log the key response to the probe&amp;#10;        thisExp.addData('condition', currCondition) #save the current condition&amp;#10;        thisExp.nextEntry() #if we do not move to the next line in the data file, then any other probes that occur before the end of this routine will overwrite our previous probe data&amp;#10;        probeTimer4.reset(0)&amp;#10;        time1=0&amp;#10;        time2=0&amp;#10;        resp1=0&amp;#10;        resp2=0&amp;#10;        printNow = 0&amp;#10;&amp;#10;#this is the probe-caught condition but we check if we're in SC because this is the second run&amp;#10;if currCondition=='PC': &amp;#10;    &amp;#10;    if Reading2_key_resp.keys == 'space':&amp;#10;        continueRoutine = False&amp;#10;    &amp;#10;    if opacityImage1 != 1 and (len(probe4) &gt; myCount4) and probeTimer4.getTime() &gt;= probe4[myCount4]:&amp;#10;        opacityImage1=1&amp;#10;        TimeAbs = mainTimer4.getTime()&amp;#10;        TimeSinceLast = probeTimer4.getTime() #get the time since the last probe went away&amp;#10;        &amp;#10;    if opacityImage1 == 1 and ('0' in keys or 'i' in keys or 'u' in keys):&amp;#10;        opacityImage1 = 0&amp;#10;        time1 = mainTimer4.getTime() - TimeAbs&amp;#10;        resp1 = keys[0]&amp;#10;        keys = []&amp;#10;        event.clearEvents()&amp;#10;        printNow = 1&amp;#10;&amp;#10;    if printNow == 1:&amp;#10;        thisExp.addData('probe_appeared', TimeAbs) #log the time that the PC probe appeared&amp;#10;        thisExp.addData('time_since_last_probe', TimeSinceLast) #log time since last probe. Should be time since start of experiment if this is the first probe&amp;#10;        thisExp.addData('response_delay', time1) #log delay from probe appearing to response key being pressed&amp;#10;        thisExp.addData('probe_key_response', resp1) #log the key response to the probe&amp;#10;        thisExp.addData('condition', currCondition) #save the current condition&amp;#10;        thisExp.nextEntry() #if we do not move to the next line in the data file, then any other probes that occur before the end of this routine will overwrite our previous probe data&amp;#10;        probeTimer4.reset(0)&amp;#10;        time1=0&amp;#10;        time2=0&amp;#10;        resp1=0&amp;#10;        resp2=0&amp;#10;        myCount4 = myCount4 + 1&amp;#10;        printNow = 0&amp;#10;        &amp;#10;firstLoop4 = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Quiz2">
      <ImageComponent name="QuizQuestion2">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$chQs" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="QuizQuestion2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.8, 0.8)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="Quiz2_key_resp">
        <Param val="'a','b','c','d'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Quiz2_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="setFiles">
      <CodeComponent name="code_8">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#SETTING ALL OUR FILE VARIABLES FOR THE EXPERIMENT BASED ON currCondition AND currConditionPs&amp;#10;if currCondition == &quot;PC&quot;:&amp;#10;    #if we're in the PC condition then show the PC instructions first run and the SC instructions second run&amp;#10;    InstrFile = &quot;InstrFile/Instr_PC.csv&quot;&amp;#10;    InstrFile2 = &quot;InstrFile/Instr_SC_v2.csv&quot;&amp;#10;    #if we're in the PC condition then show the PC probe message first run and the SC probe message second run&amp;#10;    probeMessage = &quot;Remember, when the probe appears on screen: \n Press 'i' if your MW was intentional (on purpose), or 'u' if it was unintentional (just happened on its own). \n Press '0' if you were not experiencing MW when the probe appeared.&quot;&amp;#10;    probeMessage2 = &quot;Remember: Press '1' any time you catch yourself mind wandering (MW). \n When prompted, press 'i' if your MW was intentional (on purpose), or 'u' if it was unintentional (just happened on its own).&quot;&amp;#10;elif currCondition == &quot;SC&quot;:&amp;#10;    #if we're in the SC condition then show the SC instructions first run and the PC instructions second run&amp;#10;    InstrFile = &quot;InstrFile/Instr_SC.csv&quot;&amp;#10;    InstrFile2 = &quot;InstrFile/Instr_PC_v2.csv&quot;&amp;#10;    #if we're in the SC condition then show the SC probe message first run and the PC probe message second run&amp;#10;    probeMessage = &quot;Remember: Press '1' any time you catch yourself mind wandering (MW). \n When prompted, press 'i' if your MW was intentional (on purpose), or 'u' if it was unintentional (just happened on its own).&quot;&amp;#10;    probeMessage2 = &quot;Remember, when the probe appears on screen: \n Press 'i' if your MW was intentional (on purpose), or 'u' if it was unintentional (just happened on its own). \n Press '0' if you were not experiencing MW when the probe appeared.&quot;&amp;#10; &amp;#10;if currConditionP == &quot;Life&quot;:&amp;#10;    #if we're in the Life condition then show LifePages first run and TropoPages second run&amp;#10;    stimFile = &quot;LifePages.csv&quot;&amp;#10;    stimFile2 = &quot;TropoPages.csv&quot;&amp;#10;    #if we're in the Life condition then show Life quiz questions first run and Tropo quiz questions second run&amp;#10;    quizFile = &quot;lifeQs.csv&quot;&amp;#10;    quizFile2 = &quot;tropoQs.csv&quot;&amp;#10;    &amp;#10;elif currConditionP == &quot;Tropo&quot;:&amp;#10;    #if we're in the Tropo condition then show TropoPages first run and LifePages second run&amp;#10;    stimFile = &quot;TropoPages.csv&quot;&amp;#10;    stimFile2 = &quot;LifePages.csv&quot;&amp;#10;    #if we're in the Tropo condition then show Tropo quiz questions first run and Life quiz questions second run&amp;#10;    quizFile = &quot;tropoQs.csv&quot;&amp;#10;    quizFile2 = &quot;lifeQs.csv&quot;&amp;#10;&amp;#10;#All the above variables will be used in later components as such:&amp;#10;#InstrFile used in MWdefinitions loop as the csv file to pull instruction images from&amp;#10;#InstrFile2 used in MWdefinitions2 loop as the csv file to pull instruction images from&amp;#10;#probeMessage used in IntroExp as display text&amp;#10;#probeMessage2 used in IntroExp2 as display text&amp;#10;#stimFile used in ReadingLoop as the csv file to pull reading page images from&amp;#10;#stimFile2 used in ReadingLoop2 as the csv file to pull reading page images from&amp;#10;#quizFile used in QuizLoop as the csv file to pull quiz question images from&amp;#10;#quizFile2 used in QuizLoop2 as the csv file to pull quiz question images from&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="if ((currCondition === &quot;PC&quot;)) {&amp;#10;    InstrFile = &quot;InstrFile/Instr_PC.csv&quot;;&amp;#10;} else {&amp;#10;    if ((currCondition === &quot;SC&quot;)) {&amp;#10;        InstrFile = &quot;InstrFile/Instr_SC.csv&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_8" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="InterestingQ">
      <ImageComponent name="interestingImage">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="QuizQs\Likert_interest.PNG" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="interestingImage" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.8)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="InterestingQ_key_resp">
        <Param val="'1','2','3','4','5'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="InterestingQ_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="all keys" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="EndText">
      <TextComponent name="EndExpText">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="EndExpText" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Thank you for participating in this experiment!&amp;#10;&amp;#10;Please let the research assistant know if you would like to be debriefed.&amp;#10;&amp;#10;Thank you!&amp;#10;&amp;#10;(Press 'space' to continue)" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="DifficultyQ">
      <ImageComponent name="difficultyImage">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="QuizQs\Likert_difficulty.PNG" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="difficultyImage" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.8)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="DifficultyQ_key_resp">
        <Param val="'1','2','3','4','5'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="DifficultyQ_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Halfway">
      <TextComponent name="HalfwayText">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="HalfwayText" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Thank you for completing the first half of the experiment.&amp;#10;&amp;#10;Before beginning the second half, please let the research assistant know if you have any questions or if you need a short break.&amp;#10;&amp;#10;(Press the spacebar to continue)" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="HalfwayResp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="HalfwayResp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="halfway_code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((currCondition === &quot;SC&quot;)) {&amp;#10;    currCondition = &quot;PC&quot;;&amp;#10;} else {&amp;#10;    currCondition = &quot;SC&quot;;&amp;#10;}&amp;#10;if ((currConditionP === &quot;Life&quot;)) {&amp;#10;    currConditionP = &quot;Tropo&quot;;&amp;#10;} else {&amp;#10;    currConditionP = &quot;Life&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if currCondition == 'SC':&amp;#10;    currCondition = 'PC'&amp;#10;else:&amp;#10;    currCondition = 'SC'&amp;#10;&amp;#10;if currConditionP == 'Life':&amp;#10;    currConditionP ='Tropo'&amp;#10;else:&amp;#10;    currConditionP ='Life'" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="halfway_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="EndPractice">
      <TextComponent name="EndPracticeText">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="EndPracticeText" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The practice session is now over.&amp;#10;&amp;#10;If you have no questions for the research assistant, please press the &amp;#10;spacebar to continue to the experiment.&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="EndPracticRresp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="EndPracticRresp" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="blank500">
      <TextComponent name="text_2">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val=".5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="adhdQ1_2">
      <TextComponent name="adhdQ">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="adhdQ" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$Q_stim" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="Qanswer">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Qanswer" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="1. Yes&amp;#10;2. No" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_QA">
        <Param val="'1', '2'," valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_QA" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="AlwaysQ">
      <CodeComponent name="code_11">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((key_QA.keys === &quot;1&quot;)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if(key_QA.keys == '1'):&amp;#10;    continueRoutine = True&amp;#10;else:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_11" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="AlwaysQText">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="AlwaysQText" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Have you always been like this? (as long as you can remember, or for most of your life)" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="AlwaysAnswer">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="AlwaysAnswer" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="1. Yes&amp;#10;2. No" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_AlwaysResp">
        <Param val="'1','2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_AlwaysResp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="adhdDx">
      <TextComponent name="adhdDxQ">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="adhdDxQ" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Have you ever been given an official diagnosis of attention-deficit / hyperactivity disorder (ADHD) (e.g., by a registered psychologist, psychiatrist, counsellor, etc.)?" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="Dx_answer">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Dx_answer" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="1. Yes&amp;#10;2. No&amp;#10;3. No, but I strongly suspect I might have ADHD" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_Dx">
        <Param val="'1','2','3'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_Dx" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="PageSkipping">
      <TextComponent name="NoSkipping">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="NoSkipping" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Please read at your normal pace and do not skip pages.&amp;#10;&amp;#10;&amp;#10;(press spacebar to continue)" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_Skip">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_Skip" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="intMWcaptureQ">
      <ImageComponent name="MWcaptureImage">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="QuizQs\Likert_intMW.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="MWcaptureImage" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.8)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="intMWcaptureQ_key_resp">
        <Param val="'1','2','3','4'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="intMWcaptureQ_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Likert_Mot">
      <ImageComponent name="MW_mot">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="QuizQs\Likert_motivation.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="MW_mot" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.8)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="MW_motQ_key_resp">
        <Param val="'1','2','3','4','5'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="MW_motQ_key_resp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="unIntMWcapture">
      <ImageComponent name="MWunint">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="QuizQs\Likert_unintMW.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="MWunint" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.8)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="unintMWkey_resp_2">
        <Param val="'1','2','3','4'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="unintMWkey_resp_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="EYE_RECORD_START">
      <EyetrackerRecordComponent name="etRecord_START">
        <Param val="Start Only" valType="str" updates="None" name="actionType"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="etRecord_START" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </EyetrackerRecordComponent>
    </Routine>
    <Routine name="EYE_RECORD_STOP">
      <EyetrackerRecordComponent name="EYE_Record_STOP">
        <Param val="Stop Only" valType="str" updates="None" name="actionType"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="EYE_Record_STOP" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </EyetrackerRecordComponent>
    </Routine>
    <EyetrackerCalibrationRoutine name="calibration">
      <Param name="borderColor" updates="None" val="black" valType="color"/>
      <Param name="borderWidth" updates="None" val="2" valType="num"/>
      <Param name="colorSpace" updates="None" val="hsv" valType="str"/>
      <Param name="disabled" updates="None" val="False" valType="bool"/>
      <Param name="expandDur" updates="None" val="1" valType="num"/>
      <Param name="expandScale" updates="None" val="1.5" valType="num"/>
      <Param name="fillColor" updates="None" val="" valType="color"/>
      <Param name="innerBorderColor" updates="None" val="black" valType="color"/>
      <Param name="innerBorderWidth" updates="None" val="2" valType="num"/>
      <Param name="innerFillColor" updates="None" val="green" valType="color"/>
      <Param name="innerRadius" updates="None" val="0.0035" valType="num"/>
      <Param name="movementAnimation" updates="None" val="True" valType="bool"/>
      <Param name="movementDur" updates="None" val="1.0" valType="num"/>
      <Param name="name" updates="None" val="calibration" valType="code"/>
      <Param name="outerRadius" updates="None" val="0.01" valType="num"/>
      <Param name="progressMode" updates="None" val="time" valType="str"/>
      <Param name="randomisePos" updates="None" val="True" valType="bool"/>
      <Param name="targetDelay" updates="None" val="1.0" valType="num"/>
      <Param name="targetDur" updates="None" val="1.5" valType="num"/>
      <Param name="targetLayout" updates="None" val="FIVE_POINTS" valType="str"/>
      <Param name="textColor" updates="None" val="white" valType="color"/>
      <Param name="units" updates="None" val="from exp settings" valType="str"/>
    </EyetrackerCalibrationRoutine>
  </Routines>
  <Flow>
    <EyetrackerCalibrationRoutine name="calibration"/>
    <Routine name="Launch"/>
    <Routine name="Welcome"/>
    <LoopInitiator loopType="TrialHandler" name="Demographic_Loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('chDemoQs', 'Demographics/Demographics_1.png')]), OrderedDict([('chDemoQs', 'Demographics/Demographics_2.png')]), OrderedDict([('chDemoQs', 'Demographics/Demographics_3.png')]), OrderedDict([('chDemoQs', 'Demographics/Demographics_4.png')]), OrderedDict([('chDemoQs', 'Demographics/Demographics_5.png')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="chooseDemoQs.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="Demographic_Loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="DemographicQs"/>
    <LoopTerminator name="Demographic_Loop"/>
    <Routine name="blank"/>
    <Routine name="AgeQuestion"/>
    <Routine name="AQintro"/>
    <LoopInitiator loopType="TrialHandler" name="AQ_Loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('chAQ10', 'AQ_10_Qs/AQ1.png')]), OrderedDict([('chAQ10', 'AQ_10_Qs/AQ2.png')]), OrderedDict([('chAQ10', 'AQ_10_Qs/AQ3.png')]), OrderedDict([('chAQ10', 'AQ_10_Qs/AQ4.png')]), OrderedDict([('chAQ10', 'AQ_10_Qs/AQ5.png')]), OrderedDict([('chAQ10', 'AQ_10_Qs/AQ6.png')]), OrderedDict([('chAQ10', 'AQ_10_Qs/AQ7.png')]), OrderedDict([('chAQ10', 'AQ_10_Qs/AQ8.png')]), OrderedDict([('chAQ10', 'AQ_10_Qs/AQ9.png')]), OrderedDict([('chAQ10', 'AQ_10_Qs/AQ10.png')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="chooseAQ10.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="AQ_Loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="AQ_10_Qs"/>
    <Routine name="blank500"/>
    <LoopTerminator name="AQ_Loop"/>
    <LoopInitiator loopType="TrialHandler" name="Q_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'Q_stim': 'Do you often feel restless? (e.g., being nervous, having difficulty sitting still, fidgeting, doing a lot of exercise, or being active)'}, {'Q_stim': 'Do you often act first and then think? (e.g., blurting things out, spending too much money, or being impatient)'}, {'Q_stim': 'Do you often have concentration problems? (e.g., being easily distracted, not finishing things, being easily bored, forgetful, or chaotic)'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="adhd3Qs.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="Q_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="adhdQ1_2"/>
    <Routine name="blank500"/>
    <Routine name="AlwaysQ"/>
    <Routine name="blank500"/>
    <LoopTerminator name="Q_trials"/>
    <Routine name="adhdDx"/>
    <Routine name="setFiles"/>
    <Routine name="blank"/>
    <LoopInitiator loopType="TrialHandler" name="MWdefinitions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$InstrFile" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="MWdefinitions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="MW_def"/>
    <LoopTerminator name="MWdefinitions"/>
    <Routine name="IntroExp"/>
    <Routine name="PageSkipping"/>
    <Routine name="EYE_RECORD_START"/>
    <LoopInitiator loopType="TrialHandler" name="ReadingLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$stimFile" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="ReadingLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Reading"/>
    <LoopTerminator name="ReadingLoop"/>
    <Routine name="EYE_RECORD_STOP"/>
    <Routine name="blank"/>
    <LoopInitiator loopType="TrialHandler" name="QuizLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$quizFile" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="QuizLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Quiz"/>
    <LoopTerminator name="QuizLoop"/>
    <Routine name="blank"/>
    <Routine name="InterestingQ"/>
    <Routine name="DifficultyQ"/>
    <Routine name="Likert_Mot"/>
    <Routine name="unIntMWcapture"/>
    <Routine name="intMWcaptureQ"/>
    <Routine name="blank"/>
    <Routine name="Halfway"/>
    <LoopInitiator loopType="TrialHandler" name="MWDefinitions2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$InstrFile2" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="MWDefinitions2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="MW_def2"/>
    <LoopTerminator name="MWDefinitions2"/>
    <Routine name="IntroExp2"/>
    <Routine name="EYE_RECORD_START"/>
    <LoopInitiator loopType="TrialHandler" name="ReadingLoop2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$stimFile2" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="ReadingLoop2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Reading2"/>
    <LoopTerminator name="ReadingLoop2"/>
    <Routine name="EYE_RECORD_STOP"/>
    <Routine name="blank"/>
    <LoopInitiator loopType="TrialHandler" name="QuizLoop2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$quizFile2" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="QuizLoop2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Quiz2"/>
    <LoopTerminator name="QuizLoop2"/>
    <Routine name="blank"/>
    <Routine name="InterestingQ"/>
    <Routine name="DifficultyQ"/>
    <Routine name="Likert_Mot"/>
    <Routine name="unIntMWcapture"/>
    <Routine name="intMWcaptureQ"/>
    <Routine name="blank"/>
    <Routine name="EndText"/>
  </Flow>
</PsychoPy2experiment>
